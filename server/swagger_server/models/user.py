# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_id: str=None, name: str=None, userpic: str=None, bio: str=None, interests: str=None, watchlist: str=None, created_at: str=None):  # noqa: E501
        """User - a model defined in Swagger

        :param user_id: The user_id of this User.  # noqa: E501
        :type user_id: str
        :param name: The name of this User.  # noqa: E501
        :type name: str
        :param userpic: The userpic of this User.  # noqa: E501
        :type userpic: str
        :param bio: The bio of this User.  # noqa: E501
        :type bio: str
        :param interests: The interests of this User.  # noqa: E501
        :type interests: str
        :param watchlist: The watchlist of this User.  # noqa: E501
        :type watchlist: str
        :param created_at: The created_at of this User.  # noqa: E501
        :type created_at: str
        """
        self.swagger_types = {
            'user_id': str,
            'name': str,
            'userpic': str,
            'bio': str,
            'interests': str,
            'watchlist': str,
            'created_at': str
        }

        self.attribute_map = {
            'user_id': 'user_id',
            'name': 'name',
            'userpic': 'userpic',
            'bio': 'bio',
            'interests': 'interests',
            'watchlist': 'watchlist',
            'created_at': 'created_at'
        }
        self._user_id = user_id
        self._name = name
        self._userpic = userpic
        self._bio = bio
        self._interests = interests
        self._watchlist = watchlist
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this User.


        :return: The user_id of this User.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this User.


        :param user_id: The user_id of this User.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def name(self) -> str:
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def userpic(self) -> str:
        """Gets the userpic of this User.


        :return: The userpic of this User.
        :rtype: str
        """
        return self._userpic

    @userpic.setter
    def userpic(self, userpic: str):
        """Sets the userpic of this User.


        :param userpic: The userpic of this User.
        :type userpic: str
        """

        self._userpic = userpic

    @property
    def bio(self) -> str:
        """Gets the bio of this User.


        :return: The bio of this User.
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio: str):
        """Sets the bio of this User.


        :param bio: The bio of this User.
        :type bio: str
        """

        self._bio = bio

    @property
    def interests(self) -> str:
        """Gets the interests of this User.


        :return: The interests of this User.
        :rtype: str
        """
        return self._interests

    @interests.setter
    def interests(self, interests: str):
        """Sets the interests of this User.


        :param interests: The interests of this User.
        :type interests: str
        """

        self._interests = interests

    @property
    def watchlist(self) -> str:
        """Gets the watchlist of this User.


        :return: The watchlist of this User.
        :rtype: str
        """
        return self._watchlist

    @watchlist.setter
    def watchlist(self, watchlist: str):
        """Sets the watchlist of this User.


        :param watchlist: The watchlist of this User.
        :type watchlist: str
        """

        self._watchlist = watchlist

    @property
    def created_at(self) -> str:
        """Gets the created_at of this User.


        :return: The created_at of this User.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this User.


        :param created_at: The created_at of this User.
        :type created_at: str
        """

        self._created_at = created_at
