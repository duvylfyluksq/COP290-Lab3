openapi: 3.0.3
info:
  title: FMD
  description: A website for movies' and TV shows' reviews
  termsOfService: http://swagger.io/terms/
  contact:
    email: om.dehlantube@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 3.0.0
servers:
- url: https://virtserver.swaggerhub.com/VEDANTANEOGI_1/FMD_API3.0/3.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: Reviews
  description: Everything about reviews
- name: Titles
  description: Everything about shows or movies
- name: User
  description: Operations about user
paths:
  /search:
    get:
      tags:
      - Titles
      description: Obtain all movies/shows whose prefix matches the input expression
      operationId: search_get
      parameters:
      - name: expression
        in: query
        description: the expression to be searched
        required: true
        style: form
        explode: false
        schema:
          type: string
          example: the dark knight
      responses:
        "200":
          description: Successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/title'
                x-content-type: application/json
        "404":
          description: Movie/TV Show Not found
      x-openapi-router-controller: swagger_server.controllers.titles_controller
  /review:
    post:
      tags:
      - Reviews
      summary: Add a new review
      operationId: review_post
      parameters:
      - name: movie_id
        in: query
        description: ID of the movie for which the review is being posted(null if
          TVShow)
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: JSON
      - name: show_id
        in: query
        description: ID of the TVShow for which the review is being posted(null if
          Movie)
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: JSON
      - name: user_id
        in: query
        description: ID of the user who is posting the review
        required: true
        style: form
        explode: false
        schema:
          type: integer
          example: 42
      - name: rating
        in: query
        description: rating by the user
        required: true
        style: form
        explode: false
        schema:
          maximum: 10
          minimum: 1
          type: integer
          example: 10
      - name: title
        in: query
        description: the review title of the review to be added
        required: true
        style: form
        explode: false
        schema:
          maxLength: 50
          type: string
          example: Amazing Watch!
      - name: content
        in: query
        description: content of the review
        required: true
        style: form
        explode: false
        schema:
          maxLength: 500
          type: string
          example: have you got colour in your cheeks? do you ever get that feel'
            that you can't shift the tide that sticks around like sumats in your teeth.
      - name: creation_time
        in: query
        description: creation time
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: date-time
          example: 2023-04-02T12:30:45Z
      responses:
        "200":
          description: Review added successfully
        "400":
          description: Invalid request body
      x-openapi-router-controller: swagger_server.controllers.reviews_controller
  /movie:
    get:
      tags:
      - Titles
      summary: Sort/Filter movies
      operationId: movie_get
      parameters:
      - name: genre
        in: query
        description: Genres to be filtered by
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: sort_type_browse
        in: query
        description: Parameter based on which titles will be sorted
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
          - Lex
          - Pop
          - Rel
          - Rat
      - name: sort_order
        in: query
        description: sorting order
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          enum:
          - true
          - false
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movie'
                x-content-type: application/json
        "400":
          description: Invalid request
        "404":
          description: No movies found
      x-openapi-router-controller: swagger_server.controllers.titles_controller
  /tvshow:
    get:
      tags:
      - Titles
      summary: Sort/Filter TV Shows
      operationId: tvshow_get
      parameters:
      - name: genre
        in: query
        description: Genres to be filtered by
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: sort_type_browse
        in: query
        description: Parameter based on which titles will be sorted
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
          - Lex
          - Pop
          - Rel
          - Rat
      - name: sort_order
        in: query
        description: sorting order
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          enum:
          - true
          - false
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tvshow'
                x-content-type: application/json
        "400":
          description: Invalid request
        "404":
          description: No TV Shows found
      x-openapi-router-controller: swagger_server.controllers.titles_controller
  /title:
    get:
      tags:
      - Titles
      summary: Sort/Filter Movies and TV Shows
      operationId: title_get
      parameters:
      - name: genre
        in: query
        description: Genres to be filtered by
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: sort_type_browse
        in: query
        description: Parameter based on which titles will be sorted
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
          - Lex
          - Pop
          - Rel
          - Rat
      - name: sort_order
        in: query
        description: sorting order
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          enum:
          - true
          - false
      responses:
        "200":
          description: List of Movies/TV Shows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/title'
                x-content-type: application/json
        "400":
          description: Invalid request
        "404":
          description: No titles found
      x-openapi-router-controller: swagger_server.controllers.titles_controller
  /user/{user_id}:
    get:
      tags:
      - User
      summary: Get User object(user details) from user id
      operationId: user_user_id_get
      parameters:
      - name: user_id
        in: path
        description: UserId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: User details returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "404":
          description: User not found
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/signin:
    post:
      tags:
      - User
      summary: Sign in user with credentials
      operationId: user_signin_post
      parameters:
      - name: Username
        in: query
        description: Username
        required: true
        style: form
        explode: false
        schema:
          maxLength: 25
          type: string
          example: bobdylan
      - name: Password
        in: query
        description: Password
        required: true
        style: form
        explode: false
        schema:
          maxLength: 25
          type: string
          example: godofnoobs_42
      responses:
        "200":
          description: User signed in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "400":
          description: Bad request
        "401":
          description: Invalid credentials
        "500":
          description: Internal server error
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/signup:
    post:
      tags:
      - User
      summary: Create a new user account
      operationId: user_signup_post
      parameters:
      - name: Username
        in: query
        description: Username
        required: true
        style: form
        explode: false
        schema:
          maxLength: 25
          type: string
          example: bobdylan
      - name: Password
        in: query
        description: Password
        required: true
        style: form
        explode: false
        schema:
          maxLength: 25
          type: string
          example: godofnoobs_42
      - name: Confirm_Password
        in: query
        description: Confirm Password
        required: true
        style: form
        explode: false
        schema:
          maxLength: 25
          type: string
          example: godofnoobs_42
      - name: interests
        in: query
        description: Favourite Genres
        required: true
        style: form
        explode: true
        schema:
          maxItems: 3
          minItems: 3
          type: array
          example:
          - Adventure
          - Comedy
          - Thriller
          items:
            type: string
      - name: pfp
        in: query
        description: profile picture
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: uri
          example: https://fmd.com/pfp.jpeg
      - name: bio
        in: query
        description: about user
        required: true
        style: form
        explode: false
        schema:
          maxLength: 100
          type: string
          example: "i am bobdylan, i work with duvylfyluksq"
      responses:
        "200":
          description: User account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "400":
          description: Bad request
        "409":
          description: User already exists
        "500":
          description: Internal server error
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /review/title/{id}:
    get:
      tags:
      - Reviews
      summary: Get all reviews of a title
      description: Returns a list of reviews for a particular title
      operationId: review_title_id_get
      parameters:
      - name: id
        in: path
        description: ID of the Movie or TVShow
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sort_type_reviews
        in: query
        description: Parameter based on which reviews will be sorted
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
          - Likes
          - Recent
      - name: sort_order
        in: query
        description: sorting order
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          enum:
          - true
          - false
      responses:
        "200":
          description: List of reviews for Movie/TVShow
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/review'
                x-content-type: application/json
        "400":
          description: Invalid request
        "404":
          description: Title not found
      x-openapi-router-controller: swagger_server.controllers.reviews_controller
  /review/{review_id}/comment:
    get:
      tags:
      - Reviews
      summary: Get all comments of a review
      description: Returns a list of comments for a particular review
      operationId: review_review_id_comment_get
      parameters:
      - name: review_id
        in: path
        description: ID of the review
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      responses:
        "200":
          description: List of comments for review
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
                x-content-type: application/json
        "400":
          description: Invalid request
        "404":
          description: Review not found
      x-openapi-router-controller: swagger_server.controllers.reviews_controller
    post:
      tags:
      - Reviews
      summary: Add comment to review
      operationId: review_review_id_comment_post
      parameters:
      - name: review_id
        in: path
        description: ID of the review
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: user_id
        in: query
        description: ID of the commentor
        required: true
        style: form
        explode: false
        schema:
          type: integer
          example: 42
      - name: content
        in: query
        description: Comment to be added to review
        required: true
        style: form
        explode: false
        schema:
          maxLength: 200
          type: string
          example: "im a puppet on a string, tracy island time travelling diamond,\
            \ coulda shaped heartaches"
      responses:
        "201":
          description: Comment added successfully to review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        "400":
          description: Bad request. Invalid review ID or missing required fields
        "404":
          description: Review not found
      x-openapi-router-controller: swagger_server.controllers.reviews_controller
  /review/{review_id}/likes:
    put:
      tags:
      - Reviews
      summary: Like/Unlike Review
      operationId: review_review_id_likes_put
      parameters:
      - name: review_id
        in: path
        description: ID of the review
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: user_id
        in: query
        description: ID of the user who likes the review
        required: true
        style: form
        explode: false
        schema:
          type: integer
          example: 42
      responses:
        "201":
          description: Like added or removed
        "400":
          description: Bad request. Invalid review ID or missing required fields
        "404":
          description: Review not found
      x-openapi-router-controller: swagger_server.controllers.reviews_controller
  /title/{id}:
    get:
      tags:
      - Titles
      summary: Get information about a Movie/TV Show
      description: "Returns information about a particular Movie/TV Show, including\
        \ its title, genre, director, actors, release date, and description."
      operationId: title_id_get
      parameters:
      - name: id
        in: path
        description: ID of the Movie or TV Show
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Information about the Movie/TV Show
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/title'
        "400":
          description: Invalid request
        "404":
          description: Movie/TV Show not found
      x-openapi-router-controller: swagger_server.controllers.titles_controller
  /review/user/{user_id}:
    get:
      tags:
      - Reviews
      summary: Get all reviews of a user
      description: Returns a list of reviews for a particular user
      operationId: review_user_user_id_get
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: sort_type_reviews
        in: query
        description: Parameter based on which reviews will be sorted
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
          - Likes
          - Recent
      - name: sort_order
        in: query
        description: sorting order
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          enum:
          - true
          - false
      responses:
        "200":
          description: List of reviews by the User
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/review'
                x-content-type: application/json
        "400":
          description: Invalid request
        "404":
          description: Title not found
      x-openapi-router-controller: swagger_server.controllers.reviews_controller
  /watchlist/{user_id}:
    get:
      tags:
      - User
      summary: Get all titles in user watchlist
      operationId: watchlist_user_id_get
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      responses:
        "200":
          description: List of titles in user watchlist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/title'
                x-content-type: application/json
        "400":
          description: Bad request. Invalid user ID
      x-openapi-router-controller: swagger_server.controllers.user_controller
    put:
      tags:
      - User
      summary: Add/Remove title from watchlist
      operationId: watchlist_user_id_put
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: id
        in: query
        description: id of TVShow/Movie to be added to the watchlist
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Title added/removed successfully
        "400":
          description: Bad request. Invalid user ID or title not provided
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /watchlist/{user_id}/remove:
    put:
      tags:
      - User
      summary: Remove title from user's watchlist
      operationId: watchlist_user_id_remove_put
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: id
        in: query
        description: id of the Title to be removed from user's watchlist
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Title removed successfully from user's wishlist
        "400":
          description: Bad request. Invalid user ID or missing required fields
        "404":
          description: User not found or title not found in user's wishlist
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /profile/{user_id}/username:
    put:
      tags:
      - User
      summary: Update username
      operationId: profile_user_id_username_put
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: username
        in: query
        description: New username
        required: true
        style: form
        explode: false
        schema:
          maxLength: 25
          type: string
          example: bobdylan
      responses:
        "200":
          description: Username updated successfully
        "400":
          description: Bad request. Invalid user ID or missing required fields
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /profile/{user_id}/pfp:
    put:
      tags:
      - User
      summary: Update profile picture
      operationId: profile_user_id_pfp_put
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: pfp
        in: query
        description: New Profile Picture
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: uri
          example: https://fmd.com/pfp.jpeg
      responses:
        "200":
          description: Profile Picture updated successfully
        "400":
          description: Bad request. Invalid user ID or missing required fields
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /profile/{user_id}/password:
    put:
      tags:
      - User
      summary: Update Password
      operationId: profile_user_id_password_put
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: password
        in: query
        description: New password
        required: true
        style: form
        explode: false
        schema:
          maxLength: 25
          type: string
          example: godofnoobs_42
      responses:
        "200":
          description: Password updated successfully
        "400":
          description: Bad request. Invalid user ID or missing required fields
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /profile/{user_id}/interests:
    put:
      tags:
      - User
      summary: Update interests
      operationId: profile_user_id_interests_put
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: interests
        in: query
        description: New Profile Picture
        required: true
        style: form
        explode: true
        schema:
          maxItems: 3
          minItems: 3
          type: array
          example:
          - Adventure
          - Comedy
          - Thriller
          items:
            type: string
      responses:
        "200":
          description: Interests updated successfully
        "400":
          description: Bad request. Invalid user ID or missing required fields
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /profile/{user_id}/bio:
    put:
      tags:
      - User
      summary: Update user bio
      operationId: profile_user_id_bio_put
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 42
      - name: bio
        in: query
        description: New bio
        required: true
        style: form
        explode: false
        schema:
          maxLength: 100
          type: string
          example: "i am bobdylan, i work with duvylfyluksq"
      responses:
        "200":
          description: Bio updated successfully
        "400":
          description: Bad request. Invalid user ID or missing required fields
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
components:
  schemas:
    title:
      type: object
      properties:
        movie:
          $ref: '#/components/schemas/movie'
        tvshow:
          $ref: '#/components/schemas/tvshow'
      example:
        movie:
          duration: 2hrs 2mins
          cast:
          - Leonardo Di Caprio
          - Kate Winslet
          - Bradd Pitt
          plot: plot
          release_date: 2001-08-19T00:00:00.000+00:00
          director: Christopher Nolan
          genres:
          - Adventure
          - Comedy
          - Thriller
          rating: 9.36
          writer: Todd Phillips
          movie_id:
            id: 42
          title: Inception
          poster: https://fmd.com/poster.jpeg
        tvshow:
          duration: 55mins
          cast:
          - Leonardo Di Caprio
          - Kate Winslet
          - Bradd Pitt
          show_id:
            id: 42
          plot: plot
          release_date: 2001-08-19T00:00:00.000+00:00
          director: Christopher Nolan
          genres:
          - Adventure
          - Comedy
          - Thriller
          rating: 9.36
          season: 2
          writer: Todd Phillips
          title: Peaky Blinders
          poster: https://fmd.com/poster.jpeg
    movie_id:
      type: object
      properties:
        id:
          type: integer
          example: 42
      example:
        id: 42
    show_id:
      type: object
      properties:
        id:
          type: integer
          example: 42
      example:
        id: 42
    user:
      type: object
      properties:
        user_id:
          type: integer
          example: 42
        username:
          maxLength: 25
          type: string
          example: bobdylan
        password:
          maxLength: 25
          type: string
          example: godofnoobs_42
        bio:
          maxLength: 100
          type: string
          example: "i am bobdylan, i work with duvylfyluksq"
        pfp:
          type: string
          format: uri
          example: https://fmd.com/pfp.jpeg
        watchlist_movies:
          type: object
          additionalProperties:
            type: boolean
          example:
            "1": true
            "2": false
            "42": true
        watchlist_shows:
          type: object
          additionalProperties:
            type: boolean
          example:
            "1": true
            "2": false
            "42": true
        interests:
          maxItems: 3
          minItems: 3
          type: array
          example:
          - Adventure
          - Comedy
          - Thriller
          items:
            type: string
      example:
        password: godofnoobs_42
        user_id: 42
        bio: "i am bobdylan, i work with duvylfyluksq"
        watchlist_movies:
          "1": true
          "2": false
          "42": true
        pfp: https://fmd.com/pfp.jpeg
        interests:
        - Adventure
        - Comedy
        - Thriller
        username: bobdylan
        watchlist_shows:
          "1": true
          "2": false
          "42": true
    movie:
      type: object
      properties:
        movie_id:
          $ref: '#/components/schemas/movie_id'
        title:
          type: string
          example: Inception
        plot:
          maxLength: 500
          type: string
        cast:
          maxItems: 3
          type: array
          example:
          - Leonardo Di Caprio
          - Kate Winslet
          - Bradd Pitt
          items:
            type: string
        director:
          type: string
          example: Christopher Nolan
        writer:
          type: string
          example: Todd Phillips
        rating:
          type: number
          format: float
          example: 9.36
        genres:
          maxItems: 3
          minItems: 3
          type: array
          example:
          - Adventure
          - Comedy
          - Thriller
          items:
            type: string
        release_date:
          type: string
          format: date
          example: 2001-08-19
        duration:
          pattern: ^\d+hrs \d+mins$
          type: string
          example: 2hrs 2mins
        poster:
          type: string
          example: https://fmd.com/poster.jpeg
      example:
        duration: 2hrs 2mins
        cast:
        - Leonardo Di Caprio
        - Kate Winslet
        - Bradd Pitt
        plot: plot
        release_date: 2001-08-19T00:00:00.000+00:00
        director: Christopher Nolan
        genres:
        - Adventure
        - Comedy
        - Thriller
        rating: 9.36
        writer: Todd Phillips
        movie_id:
          id: 42
        title: Inception
        poster: https://fmd.com/poster.jpeg
    tvshow:
      type: object
      properties:
        show_id:
          $ref: '#/components/schemas/show_id'
        title:
          type: string
          example: Peaky Blinders
        plot:
          maxLength: 500
          type: string
        season:
          type: integer
          example: 2
        cast:
          maxItems: 3
          type: array
          example:
          - Leonardo Di Caprio
          - Kate Winslet
          - Bradd Pitt
          items:
            type: string
        director:
          type: string
          example: Christopher Nolan
        writer:
          type: string
          example: Todd Phillips
        rating:
          type: number
          format: float
          example: 9.36
        genres:
          maxItems: 3
          minItems: 3
          type: array
          example:
          - Adventure
          - Comedy
          - Thriller
          items:
            type: string
        release_date:
          type: string
          format: date
          example: 2001-08-19
        duration:
          pattern: ^\d+mins$
          type: string
          example: 55mins
        poster:
          type: string
          example: https://fmd.com/poster.jpeg
      example:
        duration: 55mins
        cast:
        - Leonardo Di Caprio
        - Kate Winslet
        - Bradd Pitt
        show_id:
          id: 42
        plot: plot
        release_date: 2001-08-19T00:00:00.000+00:00
        director: Christopher Nolan
        genres:
        - Adventure
        - Comedy
        - Thriller
        rating: 9.36
        season: 2
        writer: Todd Phillips
        title: Peaky Blinders
        poster: https://fmd.com/poster.jpeg
    review:
      type: object
      properties:
        review_id:
          type: integer
          example: 42
        title:
          maxLength: 50
          type: string
          example: Amazing Watch!
        movie_id:
          $ref: '#/components/schemas/movie_id'
        show_id:
          $ref: '#/components/schemas/show_id'
        user_id:
          type: integer
          example: 42
        likes:
          type: object
          additionalProperties:
            type: boolean
          example:
            "1": true
            "2": false
            "42": true
        rating:
          maximum: 10
          minimum: 1
          type: integer
          example: 10
        content:
          maxLength: 500
          type: string
          example: have you got colour in your cheeks? do you ever get that feel'
            that you can't shift the tide that sticks around like sumats in your teeth.
        creation_time:
          type: string
          format: date-time
          example: 2023-04-02T12:30:45Z
      example:
        creation_time: 2023-04-02T12:30:45Z
        review_id: 42
        show_id:
          id: 42
        user_id: 42
        rating: 10
        title: Amazing Watch!
        movie_id:
          id: 42
        content: have you got colour in your cheeks? do you ever get that feel' that
          you can't shift the tide that sticks around like sumats in your teeth.
        likes:
          "1": true
          "2": false
          "42": true
    comment:
      type: object
      properties:
        comment_id:
          type: integer
          example: 42
        review_id:
          type: integer
          example: 42
        user_id:
          type: integer
          example: 42
        content:
          maxLength: 200
          type: string
          example: "im a puppet on a string, tracy island time travelling diamond,\
            \ coulda shaped heartaches"
      example:
        review_id: 42
        user_id: 42
        comment_id: 42
        content: "im a puppet on a string, tracy island time travelling diamond, coulda\
          \ shaped heartaches"
  parameters:
    genre:
      name: genre
      in: query
      description: Genres to be filtered by
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    sort_type_browse:
      name: sort_type_browse
      in: query
      description: Parameter based on which titles will be sorted
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
        - Lex
        - Pop
        - Rel
        - Rat
    sort_type_reviews:
      name: sort_type_reviews
      in: query
      description: Parameter based on which reviews will be sorted
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
        - Likes
        - Recent
    sort_order:
      name: sort_order
      in: query
      description: sorting order
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        enum:
        - true
        - false

